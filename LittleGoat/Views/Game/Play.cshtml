@model LittleGoat.ViewModels.PlayViewModel

@{
    ViewBag.Title = Resources.in_game;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row" style="margin-top: 5px;">
    <div class="col-md-6 col-md-push-6">
        @Html.Partial("_Chat", new LittleGoat.ViewModels.ChatViewModel() { SerieId = Model.SerieId, ChatMessages = Model.LastChatMessages, Collapsed = true })
    </div>

    <div class="col-md-6 col-md-pull-6">
        <div id="nextExpectedAction">
            @Resources.memorize_your_cards
        </div>
    </div>

    <div class="col-md-6 col-md-pull-6">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <img src="@Url.Content("~/Content/Images/deck.jpg")" class="deck" />
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    @if (Model.CardFromDeck != null)
                    {
                        <img src="@(Url.Content("~/Content/Images/") + Model.CardFromDeck.FileName)" class="game-card" data-id="100" id="currentCard" style="display: none;" />
                    }
                </div>
            </div>

            <div class="row">
                @if (Model.FirstTwoCards.Any())
                {
                    for (int i = 0; i < Model.FirstTwoCards.Count; i++)
                    {
                        <div class="col-xs-3">
                            <img src="@(Url.Content("~/Content/Images/") + Model.FirstTwoCards[i].FileName)" class="game-card player-card" id="gameCard@(i)" data-id="@i" />
                        </div>
                    }
                }
                @for (int i = Model.FirstTwoCards.Count; i < 4; i++)
                {
                    <div class="col-xs-3">
                        <img src="@Url.Content("~/Content/Images/back_of_card.jpg")" class="game-card player-card" id="gameCard@(i)" data-id="@i" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/signalr/hubs" type="text/javascript"></script>
    <script>

        var key = '@Model.SerieId';

        var selectedCardId = -1;

		function hideFirstTwoCards() {
			$('.first-two').attr('src', '@Url.Content("~/Content/Images/back_of_card.jpg")');
			$('#currentCard').show();
			$('#nextExpectedAction').html('@Model.NextExpectedAction');
		}

		function scrollChatToBottom() {
			var panel = $('.panel-body');
			var height = panel[0].scrollHeight;
			panel.scrollTop(height);
		}

	@if (Model.FirstTwoCards.Any())
	{
		@:setTimeout(hideFirstTwoCards, @((Model.DateStopShowFirstTwoCards - DateTime.UtcNow).TotalMilliseconds));
	}
	else
	{
		@:$('#currentCard').show();
		@:$('#nextExpectedAction').html('@Model.NextExpectedAction');
	}

		$(function () {
			var hub = $.connection.serieHub;

			hub.client.newChatMessageReceived = function (id, date, playerName, pictureUrl, message) {
				var align = 'left';
				var lastMessage = $('.chat li:last').last();
				if (lastMessage && lastMessage.hasClass('left-chat-message')) {
					align = 'right';
				}
				var newMessage = `<li class="`+align+`-chat-message clearfix" data-id="`+id+`">
									<span class="chat-img">
										<img src="`+ pictureUrl+`" alt="User Avatar" class="img-circle" />
									</span>
									<div class="chat-body clearfix">
										<div class="header">
											<strong class="primary-font">`+playerName+`</strong>
											<small class="text-muted">
												<span class="glyphicon glyphicon-time"></span>`+date+`
											</small>
										</div>
										<p>`+ message+`</p>
									</div>
								</li>`;
				$('.chat').append(newMessage);

				scrollChatToBottom();

				if ($('#collapseOne').hasClass('collapse') && !$('#chatPanel').hasClass('chatPanel--red-messages')) {
					$('#chatPanel').addClass('chatPanel--red-messages');
				}
			};

			hub.client.newChatMessageUpdated = function (id, message) {
				var lastMessage = $('li[data-id=' + id + ']');
				if (lastMessage) {
					$('li[data-id=' + id + '] > div > p').html(message);
					scrollChatToBottom();

					if ($('#collapseOne').hasClass('collapse') && !$('#chatPanel').hasClass('chatPanel--red-messages')) {
						$('#chatPanel').addClass('chatPanel--red-messages');
					}
				}
			};

			hub.client.nextExpectedAction = function (message) {
				$('#nextExpectedAction').html(message);
			}

			$('#collapseLink').click(function () {
				if ($('#chatPanel').hasClass('chatPanel--red-messages')) {
					$('#chatPanel').removeClass('chatPanel--red-messages');
				}
			});

			$("#btn-input").on('keyup', function (e) {
				if (e.keyCode == 13) {
					$('#btn-chat').click();
				}
			});

			$.connection.hub.start().done(function () {
				hub.server.joinGroup('@Model.SerieId');

				$('#btn-chat').click(function (e) {
					hub.server.broadcastChatMessageToGroup('@Model.SerieId', $('#btn-input').val());
					$('#btn-input').val('');
				});
            });

            $('.game-card').click(function () {
                var that = $(this);
                if (selectedCardId === -1) {
                    selectedCardId = Number(that.attr('data-id'));
                    that.parent().addClass('selected');
                } else if (selectedCardId === Number(that.attr('data-id'))) {
                    $('#gameCard' + selectedCardId).parent().removeClass('selected');
                    selectedCardId === -1;
                } else if (selectedCardId === 100 || that.attr('data-id') === 100) {
                    that.parent().addClass('selected-red');

                    var cardId = selectedCardId === 100 ? that.attr('data-id') : selectedCardId;

                    // we put the drawn card instead of the current one, and we throw away the current one
                    $.post('@Url.Action("TakeDrawnCard", "Game")', { key: key, card: cardId }, function (result) {
                        if (result.ok === false) {
                            alert(result.errorMessage);
                        }
                    });

                    selectedCardId = -1;

                    SwitchCardsAnimation(that, '#gameCard' + selectedCardId);
                } else {
                    that.parent().addClass('selected-red');

                    $.post('@Url.Action("SwitchPlayerCards", "Game")', { key: key, firstCard: selectedCardId, secondCard: Number(that.attr('data-id')) }, function (result) {
                        if (result.ok === false) {
                            alert(result.errorMessage);
                        }
                    });

                    selectedCardId = -1;

                    SwitchCardsAnimation(that, '#gameCard' + selectedCardId);
                }
            });

            var switchCardsAnimation = function (card1, card2) {
                setTimeout(function () {
                    $(card1).parent().removeClass('selected-red');
                    $(card1).parent().addClass('selected');

                    $(card2).parent().removeClass('selected');
                    $(card2).parent().addClass('selected-red');
                }, 250);

                setTimeout(function () {
                    $(card1).parent().removeClass('selected');
                    $(card2).parent().removeClass('selected-red');
                }, 500);
            }

			var windowWidth;
			if (window.outerHeight) {
				windowWidth = window.outerWidth;
			}
			else {
				windowWidth = document.body.clientWidth;
			}
            if (windowWidth > 892) {
                setTimeout(function () { $('#collapseLink').click(); }, 100)
            }

            $('#collapseLink').click(function () {
                if ($('#collapseOne').hasClass('collapse')) {
                    setTimeout(scrollChatToBottom, 100);
                }
            });
		});
    </script>
}